#!/usr/bin/python

import sys
import subprocess
import os
import json

gcChoices = [
  ["-XX:+UseParallelGC"],
  ["-XX:+UseParallelGC", "-XX:+UseCondCardMark"],
  ["-XX:+UseG1GC"],
  []
]

def setGC(gcConfig):
  return gcChoices[gcConfig]

def setProcs(numProcs):
  return ["-Djava.util.concurrent.ForkJoinPool.common.parallelism={}".format(numProcs)]

def makeCmd(gcConfig, numProcs):
  progArgs = ["Sort", "100000000", "10", "5"]
  runtimeArgs = setGC(gcConfig) + setProcs(numProcs)
  cmd = " ".join(["/usr/bin/time -v /usr/bin/java"] + runtimeArgs + progArgs)
  return {'config': 'java',
          'tag': 'sort-shootout',
          'cmd': cmd,
          'procs': numProcs,
          'cwd': 'shootout/java'}

maxp = 70
procs = [1,10,20,30,40,50,60,70]

if len(sys.argv) > 1:
  maxp = int(sys.argv[1])

if (maxp >= 10):
  procs = range(1, (maxp/10)+1)
  procs = [10*p for p in procs]
  procs = [1] + procs
else:
  procs = range(1, maxp+1)

gcConfigNum = 0

for p in procs:
  print(json.dumps(makeCmd(gcConfigNum, p)))
